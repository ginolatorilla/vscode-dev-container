// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.238.0/containers/ubuntu
{
	"name": "Ubuntu",
	"build": {
		"dockerfile": "Dockerfile",
		"args": {
			"BASE_IMAGE": "ubuntu", // WARNING: This project supports Debian and Ubuntu variants only.
			"USERNAME": "${localEnv:USER}"
		}
	},
	"remoteUser": "${localEnv:USER}",
	"mounts": [
		"source=vscode-dev-container-home,target=/home/${localEnv:USER},type=volume", // Persist home directory state, like configurations and shell history.
		"source=${localEnv:HOME}/.ssh,target=/home/${localEnv:USER}/.ssh,type=bind,consistency=cached", // Sync SSH config
		"source=${localEnv:HOME}/.docker,target=/home/${localEnv:USER}/.docker,type=bind,consistency=cached", // Sync dotdocker
		"source=${localEnv:HOME}/Documents,target=/home/${localEnv:USER}/Documents,type=bind,consistency=cached", // Sync Documents
		"source=${localEnv:HOME}/Downloads,target=/home/${localEnv:USER}/Downloads,type=bind,consistency=cached", // Sync Downloads
		"source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" // Connect to the docker daemon in the host.
	],
	"runArgs": [
		"--init",
		"--hostname=vscode-dev-container"
	],
	"overrideCommand": false, // Let the ENTRYPOINT run, don't allow VSCode to interfere.
	"shutdownAction": "none",
	"customizations": {
		"vscode": {
			"settings": {
				"dotfiles.repository": "ginolatorilla/dotfiles"
			},
			"extensions": [
				"almenon.arepl",
				"ms-azuretools.vscode-docker",
				"bmalehorn.vscode-fish",
				"bierner.github-markdown-preview",
				"eamodio.gitlens",
				"ms-toolsai.jupyter",
				"DavidAnson.vscode-markdownlint",
				"ms-python.vscode-pylance",
				"ms-python.python",
				"foxundermoon.shell-format",
				"redhat.vscode-yaml",
				"yzhang.markdown-all-in-one",
				"VisualStudioExptTeam.vscodeintellicode",
				"VisualStudioExptTeam.intellicode-api-usage-examples",
				"GrapeCity.gc-excelviewer",
				"codezombiech.gitignore",
				"timonwong.shellcheck",
				"golang.Go"
			]
		}
	}
}